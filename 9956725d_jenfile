pipeline {
    agent any

    stages {
        stage('9956725d_OP_S1') {
            steps {
                echo 'Stage 1: Create a backup image and update UAT web server'
                // Backup UAT server and update index.html
                sh '''
                echo "Creating new backup image for UAT server..."
                docker commit 9956725d_uatsvr 9956725d_uatsvr_image
                echo "Updating UAT web server using Bolt script..."
                ./9956725d_script
                '''
                echo "9956725d_OP_S1: UAT web server is backup and updated"
            }
        }
        stage('9956725d_OP_S2') {
            steps {
                echo 'Stage 2: Verify UAT server is running'
                // Test UAT server
                sh '''
                curl -Is http://9956725d_uatsvr.localdomain | head -n 1 > /tmp/uatsvr-result-file
                if grep -q "HTTP/1.1 200 OK" /tmp/uatsvr-result-file; then
                    echo "9956725d_OP_S2: UAT server is running"
                else
                    echo "9956725d_OP_S2: UAT server fails"
                    exit 1
                fi
                '''
            }
        }
        stage('9956725d_OP_S3') {
            steps {
                echo 'Stage 3: Prompt for UAT stress test'
                // User prompt for stress test
                input message: 'Proceed with stress test on UAT web server?', ok: 'Yes'
            }
        }
        stage('9956725d_OP_S4') {
            steps {
                echo 'Stage 4: Verify UAT stress test results'
                // Assume stress test result is good
                echo "9956725d_OP_S4: Stress test result is good"
            }
        }
        stage('9956725d_OP_S5') {
            steps {
                echo 'Stage 5: Prompt for deployment to PROD web server'
                // User prompt for PROD deployment
                input message: 'Proceed to update PROD web server?', ok: 'Yes'
            }
        }
        stage('9956725d_OP_S6') {
            steps {
                echo 'Stage 6: Create a backup image and update PROD web server'
                // Backup PROD server and update index.html
                sh '''
                echo "Creating new backup image for PROD server..."
                docker commit 9956725d_prodsvr 9956725d_prodsvr_image
                echo "Updating PROD web server using Bolt script..."
                ./9956725d_script
                '''
                echo "9956725d_OP_S6: PROD web server is backup and updated"
            }
        }
        stage('9956725d_OP_S7') {
            steps {
                echo 'Stage 7: Verify PROD server and prompt for actions if issues occur'
                // Test PROD server
                sh '''
                curl -Is http://9956725d_prodsvr.localdomain | head -n 1 > /tmp/prodsvr-result-file
                if grep -q "HTTP/1.1 200 OK" /tmp/prodsvr-result-file; then
                    echo "9956725d_OP_S7: Production website is operational"
                else
                    input message: 'Choose next action:',
                          parameters: [choice(name: 'Action', choices: 'Trigger roll back\nTroubleshooting', description: 'Select an action')]
                fi
                '''
            }
        }
    }
}
